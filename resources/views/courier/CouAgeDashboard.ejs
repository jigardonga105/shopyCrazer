<head>
    <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="/css/bootstrap.min.css" />

    <style>
        .bgDarkCSS {
            background: black;
            color: white;
        }

        .f15 {
            font-size: 15px !important;
        }

        .addressTd {
            width: 233px !important;
            max-height: 130px !important;
            overflow-y: scroll;
            -ms-overflow-style: none;
            /* IE and Edge */
            scrollbar-width: none;
            /* Firefox */
        }

        .addressTd::-webkit-scrollbar {
            display: none;
        }

        .placedColor {
            background-color: #7fa1ff !important;
        }

        .confirmedColor {
            background-color: #7fe3ff !important;
        }

        .shippedColor {
            background-color: #7fffec !important;
        }

        .deliveryColor {
            background-color: #7fffae !important;
        }

        .completedColor {
            background-color: #09d828 !important;
        }

        .returnedColor {
            background-color: yellow !important;
        }

        .cancelledColor {
            background-color: red !important;
        }

        #courierAgentDashboard #withoutLogin {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            grid-template-rows: 1fr;
            grid-column-gap: 0px;
            grid-row-gap: 0px;
            justify-items: center;
        }

        #courierAgentDashboard #withoutLogin #login {
            grid-area: 1 / 1 / 2 / 3;
        }

        #courierAgentDashboard #withoutLogin #poster {
            grid-area: 1 / 3 / 2 / 6;
        }

        @media screen and (max-width: 950px) {
            #courierAgentDashboard #withoutLogin #poster {
                display: none !important;
            }

            #courierAgentDashboard #withoutLogin {
                display: grid;
                grid-template-columns: 1fr;
                grid-template-rows: 1fr;
                grid-column-gap: 0px;
                grid-row-gap: 0px;
            }

            #courierAgentDashboard #withoutLogin #login {
                grid-area: 1 / 1 / 2 / 2;
            }

            #courierAgentDashboard .dashBody {
                background-image: url('/img/Air-International-express.png');
                background-repeat: no-repeat;
                background-size: cover;
                background-position: center;
            }
        }

        @media screen and (max-width: 890px) {
            .courierAgeTab {
                width: 762px !important;
            }

            .couAgeTabDiv {
                overflow-x: scroll;
            }
        }

        @media screen and (max-width: 830px) {
            #courierAgentDashboard #loggedIn {
                display: flex !important;
                flex-direction: column;
            }

            .loggedIn-dashboard {
                margin: auto 10px !important;
            }
        }

        @media screen and (max-width: 500px) {
            #dashboard {
                margin: 0rem 0rem !important;
            }

            #courierAgentDashboard .header {
                margin-left: 10px !important;
            }
        }

        @media screen and (max-width: 350px) {
            #login-div {
                width: auto !important;
            }

            #login-div strong,
            #login-div label,
            #login-div input {
                font-size: 15px !important;
            }
        }
    </style>
</head>

<section id="courierAgentDashboard">
    <% if(msg) { %>
        <input type="hidden" id="msg" value="<%= msg %>">
        <% } %>
            <div class="bg-gray-100">
                <div class="py-10 mx-5 <% if(cAg) { %>loggedIn-dashboard<% } %>" id="dashboard">
                    <div class="header inline-block">
                        <h3>Courier Agent Dashboard :-</h3>
                    </div>

                    <% if(cAg) { %>
                        <a href="/logout">
                            <div class="logout inline-block float-right">
                                <button type="button"
                                    class="inline-block px-6 py-2.5 bg-gray-800 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-gray-900 hover:shadow-lg focus:bg-gray-900 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-gray-900 active:shadow-lg transition duration-150 ease-in-out">Logout</button>
                            </div>
                        </a>
                        <% } %>

                            <div id="dashBody" class="dashBody bg-white mt-2 w-full rounded py-5 px-3">
                                <div id="alertMsg"></div>

                                <% if(!cAg) { %>
                                    <div id="withoutLogin" class="flex">
                                        <div class="login my-auto" id="login">
                                            <div id="login-div" class="block px-6 py-2 rounded-lg shadow-lg bg-dark w-80">
                                                <h3 class="text-white">Login:</h3>
                                                <div class="inline-block w-2 h-2 mr-2 bg-white rounded-full"></div>
                                                <strong class="text-white text-sm">
                                                    You are not logged In.
                                                </strong>
                                                <form action="/couAgeLogin" method="POST" class="mt-2">
                                                    <input type="hidden" name="role" value="courierAgent">
                                                    <div class="form-group mb-6">
                                                        <label for="email"
                                                            class="form-label inline-block mb-2  text-white">Email
                                                            address</label>
                                                        <input type="email" name="email"
                                                            class="form-control block w-full px-3 py-1 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
                                                            id="email" aria-describedby="emailHelp"
                                                            placeholder="Enter email">
                                                        <small id="emailHelp"
                                                            class="text-white block mt-1 text-xs text-gray-600">We'll
                                                            never share your email with anyone else.</small>
                                                    </div>
                                                    <div class="form-group mb-6">
                                                        <label for="password"
                                                            class="form-label inline-block mb-2  text-white">Password</label>
                                                        <input type="password" name="password"
                                                            class="form-control block w-full px-3 py-1 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
                                                            id="password" placeholder="Password">
                                                    </div>
                                                    <button type="submit"
                                                        class="px-6 py-2.5 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-gray-200 hover:text-black hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:shadow-lg transition duration-150 ease-in-out">Login</button>
                                                </form>
                                            </div>
                                        </div>
                                        <div id="poster" class="mx-auto">
                                            <img src="/img/Air-International-express.png" alt="Poster">
                                        </div>
                                    </div>
                                    <% } else { %>
                                        <input type="hidden" id="userData"
                                            value="<%= JSON.stringify(courierAgents) %>" />
                                        <input type="hidden" id="calData" value="<%= JSON.stringify(calData) %>" />
                                        <input type="hidden" id="stOrd" value="<%= JSON.stringify(stOrd) %>" />
                                        <input type="hidden" id="prdArr" value="<%= JSON.stringify(prdArr) %>" />

                                        <div class="loggedIn grid grid-cols-2 gap-10" id="loggedIn">
                                            <div id="personalInfo" class="personalInfo border rounded shadow p-2"></div>
                                            <div id="orderData" class="orderData border rounded shadow p-2"></div>
                                        </div>

                                        <div id="showOrds" class="showOrds mt-20 cursor-pointer">
                                            <div id="remainings"
                                                class="remainings flex justify-between shadow-sm rounded px-5 py-3">
                                                <h5>
                                                    <strong class="cursor-pointer">Remainings</strong>
                                                    <strong class="cursor-pointer ml-5" id="remHead"></strong>
                                                </h5>
                                                <i class="fa-solid fa-caret-down fa-2x"></i>
                                            </div>
                                            <div id="remainings-ords" class="couAgeTabDiv my-2"></div>

                                            <div id="completed"
                                                class="completed flex justify-between shadow-sm rounded px-5 py-3">
                                                <h5>
                                                    <strong class="cursor-pointer">Delivered</strong>
                                                    <strong class="cursor-pointer ml-5" id="delHead"></strong>
                                                </h5>
                                                <i class="fa-solid fa-caret-down fa-2x"></i>
                                            </div>
                                            <div id="completed-ords" class="couAgeTabDiv my-2"></div>

                                            <div id="returned"
                                                class="returned flex justify-between shadow-sm rounded px-5 py-3">
                                                <h5>
                                                    <strong class="cursor-pointer">Returned</strong>
                                                    <strong class="cursor-pointer ml-5" id="retHead"></strong>
                                                </h5>
                                                <i class="fa-solid fa-caret-down fa-2x"></i>
                                            </div>
                                            <div id="returned-ords" class="couAgeTabDiv my-2"></div>

                                            <div id="cancelled"
                                                class="cancelled flex justify-between shadow-sm rounded px-5 py-3">
                                                <h5>
                                                    <strong class="cursor-pointer">Cancelled</strong>
                                                    <strong class="cursor-pointer ml-5" id="canHead"></strong>
                                                </h5>
                                                <i class="fa-solid fa-caret-down fa-2x"></i>
                                            </div>
                                            <div id="cancelled-ords" class="couAgeTabDiv my-2"></div>
                                        </div>
                                        <% } %>
                            </div>
                </div>
            </div>
</section>


<script src="/socket.io/socket.io.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.min.js"></script>
<script>
    //=======================================================================
    //=======================================================================

    let userData = document.getElementById('userData');
    if (userData) {
        userData = JSON.parse(userData.value);

        let calData = document.getElementById('calData');
        calData = JSON.parse(calData.value);

        let stOrd = document.getElementById('stOrd');
        stOrd = JSON.parse(stOrd.value);

        let prdArr = document.getElementById('prdArr');
        prdArr = JSON.parse(prdArr.value);

        //================================================================================
        var completedOrds = [];
        var returnedOrds = [];
        var cancelledOrds = [];
        var remainingsOrds = [];

        const seperatesOrds = () => {

            completedOrds = [];
            returnedOrds = [];
            cancelledOrds = [];
            remainingsOrds = [];

            for (const key in stOrd) {
                if (stOrd[key].status === 'completed') {
                    completedOrds.push(stOrd[key]);
                } else if (stOrd[key].status === 'returned') {
                    returnedOrds.push(stOrd[key]);
                } else if (stOrd[key].status === 'cancelled') {
                    cancelledOrds.push(stOrd[key]);
                } else {
                    remainingsOrds.push(stOrd[key]);
                }
            }

            let headArr = ['remHead', 'delHead', 'retHead', 'canHead'];
            headArr.map(head => {
                document.getElementById(head).innerHTML = head == 'remHead' ? '(' + remainingsOrds.length + ')' : head == 'delHead' ? '(' + completedOrds.length + ')' : head == 'retHead' ? '(' + returnedOrds.length + ')' : head == 'canHead' ? '(' + cancelledOrds.length + ')' : '';
            })
        };
        seperatesOrds(stOrd);


        //================================================================================
        //================================================================================

        let personalInfo = document.getElementById('personalInfo');
        personalInfo.innerHTML = `<div class="flex flex-col">
                                    <div class="overflow-x-auto sm:-mx-6 lg:-mx-8">
                                        <div class="py-2 inline-block min-w-full sm:px-6 lg:px-8">
                                            <div class="overflow-hidden">
                                                <table class="min-w-full">
                                                    <thead class="bg-white border-b">
                                                        <tr class="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                <h3><strong>State:</strong></h3>
                                                            </td>
                                                            <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                <h3>${userData.state}</h3>
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                <strong>Name:</strong>
                                                            </td>
                                                            <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                ${userData.first_name} ${userData.last_name}
                                                            </td>
                                                        </tr>
                                                        <tr class="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                <strong>Email:</strong>
                                                            </td>
                                                            <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                ${userData.email}
                                                            </td>
                                                        </tr>
                                                        <tr class="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                <strong>Phone:</strong>
                                                            </td>
                                                            <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                ${userData.phone}
                                                            </td>
                                                        </tr>
                                                        <tr class="bg-white transition duration-300 ease-in-out hover:bg-gray-100">
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                <strong>Address:</strong>
                                                            </td>
                                                            <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                ${userData.address[0].main}
                                                                <br>
                                                                ${userData.address[0].city} - ${userData.address[0].pin}
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>`;

        const calcDivFillFunc = () => {
            let orderData = document.getElementById('orderData');
            orderData.innerHTML = `<div class="flex flex-col">
                                        <div class="overflow-x-auto sm:-mx-6 lg:-mx-8">
                                            <div class="py-2 inline-block min-w-full sm:px-6 lg:px-8">
                                                <div class="overflow-hidden">
                                                    <table class="min-w-full">
                                                        <thead class="bg-white border-b">
                                                            <tr class="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                    <h3><strong>Total Orders:</strong></h3>
                                                                </td>
                                                                <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                    <h3>${calData.total}</h3>
                                                                </td>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr class="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                    <strong>Gujarat's Orders:</strong>
                                                                </td>
                                                                <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                    ${calData.stOrd}
                                                                </td>
                                                            </tr>
                                                            <tr class="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                    <strong>Delivered:</strong>
                                                                </td>
                                                                <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                    ${completedOrds.length}
                                                                </td>
                                                            </tr>
                                                            <tr class="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                    <strong>Returned:</strong>
                                                                </td>
                                                                <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                    ${returnedOrds.length}
                                                                </td>
                                                            </tr>
                                                            <tr class="bg-white transition duration-300 ease-in-out hover:bg-gray-100">
                                                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                                    <strong>Cancelled:</strong>
                                                                </td>
                                                                <td class="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                                                                    ${cancelledOrds.length}
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>`;
        };
        calcDivFillFunc(calData);

        //================================================================================
        //================================================================================
        var changeStatusFunc = (formData) => {
            let form = new FormData(formData);
            let orderId = form.get('orderId');
            let status = form.get('status');

            axios.post('/courieAgeDashBoard/cSt', { orderId, status })
                .then((response) => {
                    console.log(response.data.msg);
                    if (response.data.msg == 'updated') {
                        new Noty({
                            type: 'success',
                            timeout: 2000,
                            text: 'Order status updated successfully.',
                            progressBar: false,
                        }).show();

                        let orderUpdated = response.data.orderUpdated;
                        stOrd.map((ord, i) => {
                            if (ord._id == orderUpdated._id) {
                                stOrd[i] = orderUpdated;
                            }
                        })
                        seperatesOrds(stOrd);
                        calcDivFillFunc(calData);
                        prtOrdsDivsFunc();

                    } else if (msg == 'notUpdated') {
                        new Noty({
                            type: 'error',
                            timeout: 2000,
                            text: 'We are facing some issues. Please try again later.',
                            progressBar: false,
                        }).show();
                    }
                })
                .catch((error) => {
                    console.log(error);
                    if (error) {
                        new Noty({
                            type: 'error',
                            timeout: 2000,
                            text: 'We are facing some issues. Please try again later.',
                            progressBar: false,
                        }).show();
                    }
                });
        }

        //================================================================================
        //================================================================================

        const renderItems = (items) => {
            let parsedItems = Object.values(items) //Object.values(obj) return Array without key, that contain only values of obj
            return parsedItems.map((menuItem) => {
                return `
                <p>${menuItem.item.name} - ${menuItem.qty} pcs </p>
            `
            }).join('')
        }


        const totalQtyFunc = (order) => {
            //Return Total Quantity of The Order
            let qty = 0;
            for (const key in order.items) {
                let feature = order.items[key].feature;

                feature.map((obj) => {
                    qty += obj.qty;
                })

            }
            return qty;
        }

        const prtAddFunc = (address) => {
            //Return the address of the Order
            return `<span class="block">${address['add-area&street']}, </span>
                    <span>${address['add-landmark']}</span>
                    <span>${address['add-locality']}, </span>
                    <span class="block">
                        <span class="font-bold underline underline-offset-8">${address['add-city']} - </span>
                        <span class="font-bold underline underline-offset-8">${address['add-pin']}</span>
                    </span>
                    <span class="block font-bold">${address['add-state']}</span>`;
        }

        const getUpdateDataFunc = (order) => {
            //Return the when order updated
            const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

            let month = months[new Date(order.updatedAt).getMonth()];
            let date = new Date(order.updatedAt).getDate();
            let year = new Date(order.updatedAt).getFullYear();
            let hour = new Date(order.updatedAt).getHours();
            let minute = new Date(order.updatedAt).getMinutes();

            return `<span class="block">${hour}:${minute}</span>
                    <span class="block"><strong>${month} ${date}, ${year}</strong></span>`;
        }

        const prtOrdsDivsFunc = () => {
            let ordDivsIdArr = ["remainings", "completed", "returned", "cancelled"];
            ordDivsIdArr.map((id) => {
                if (eval(`${id}Ords`).length > 0) {

                    let div = document.getElementById(id);
                    document.getElementById(`${id}-ords`).style.display = "none";
                    document.getElementById(`${id}-ords`).innerHTML = '';
                    document.getElementById(`${id}-ords`).innerHTML = `<table class="courierAgeTab w-full table-auto bg-white">
                                                                        <thead>
                                                                            <tr>
                                                                                <th class="px-4 py-2 text-left">Order Id</th>
                                                                                <th class="px-4 py-2 text-left">Customer</th>
                                                                                <th class="px-4 py-2 text-left">status</th>
                                                                                <th class="px-4 py-2 text-left">Updated at</th>
                                                                                <th class="px-4 py-2 text-left">Payment Status</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody id="${id}-orderTableBody" class="f15 orderTableBody">
                                                                        </tbody>
                                                                    </table>`;

                    let ordTabBody = document.getElementById(`${id}-orderTableBody`);
                    ordTabBody.innerHTML = '';
                    eval(`${id}Ords`).map(order => {
                        let name = JSON.parse(order.address)['add-name'];
                        ordTabBody.innerHTML += `<tr>
                                                <td class="border px-2 py-2 text-green-900">
                                                    <p class="f15">${order._id}</p>
                                                    <div class="f15"><strong>Total Items: </strong>${totalQtyFunc(order)}</div>
                                                </td>
                                                <td class="border px-4 py-2 flex flex-column">
                                                    <p class="flex flex-row gap-2">
                                                        <i class="fa-solid fa-user"></i>
                                                        <span class="f15">${name}</span>
                                                    </p>
                                                    <p class="flex flex-row gap-2">
                                                        <i class="fa-solid fa-phone"></i>
                                                        <span><a class="link f15" href="#">${order.phone}</a></span>
                                                    </p>
                                                    <p class="flex flex-row gap-2">
                                                        <i class="fa-solid fa-box"></i>
                                                        <span class="f15">${prtAddFunc(JSON.parse(order.address))}</span>
                                                    </p>
                                                </td>
                                                <td class="border px-2 py-2">
                                                    <div class="inline-block relative w-36">
                                                        <form action="/courieAgeDashBoard/cSt" class="chnStatusForm" method="POST">
                                                            <input type="hidden" name="orderId" value="${order._id}">
                                                            
                                                            <select name="status" id="${order._id}-select" onchange="changeStatusFunc(this.form)"
                                                                class="block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline f15">
                                                                <option value="placed" ${order.status === 'placed' ? 'selected' : ''}>
                                                                    Placed
                                                                </option>
                                                                <option value="confirmed" ${order.status === 'confirmed' ? 'selected' : ''}>
                                                                    Confirmed
                                                                </option>
                                                                <option value="shipped" ${order.status === 'shipped' ? 'selected' : ''}>
                                                                    Shipped
                                                                </option>
                                                                <option value="delivery" ${order.status === 'delivery' ? 'selected' : ''}>
                                                                    Out for Delivery
                                                                </option>
                                                                <option value="completed" ${order.status === 'completed' ? 'selected' : ''}>
                                                                    Completed
                                                                </option>
                                                                <option value="returned" ${order.status === 'returned' ? 'selected' : ''}>
                                                                    Returned
                                                                </option>
                                                                <option value="cancelled" ${order.status === 'cancelled' ? 'selected' : ''}>
                                                                    Cancelled
                                                                </option>
                                                            </select>

                                                        </form>
                                                        <div
                                                            class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                                                            <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg"
                                                                viewBox="0 0 20 20">
                                                                <path
                                                                    d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                                                            </svg>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="border px-2 py-2">
                                                    ${getUpdateDataFunc(order)}
                                                </td>
                                                <td class="border px-2 py-2">
                                                    ${order.paymentStatus ? 'Paid' : 'Not Paid'}
                                                </td>
                                            </tr>`;

                        let selectId = document.getElementById(`${order._id}-select`);
                        selectId.classList.add(`${selectId.value}Color`);
                    })

                } else {
                    document.getElementById(`${id}-ords`).innerHTML = '';
                }
            })
        };
        prtOrdsDivsFunc();

        let ordDivsIdArr = ["remainings", "completed", "returned", "cancelled"];
        ordDivsIdArr.map((id) => {
            let div = document.getElementById(id);
            div.addEventListener("click", () => {
                let subDiv = document.getElementById(`${id}-ords`);
                if (subDiv.style.display == "none") {

                    ordDivsIdArr.map(divId => {
                        //Remove black background from the div header
                        let div = document.getElementById(divId);
                        div.classList.remove("bgDarkCSS");

                        //Hide other subDivs
                        let subDiv = document.getElementById(`${divId}-ords`);
                        subDiv.style.display = "none";
                    })

                    div.classList.add("bgDarkCSS");
                    subDiv.style.display = "block";
                } else {

                    div.classList.remove("bgDarkCSS");
                    subDiv.style.display = "none";
                }
            })
        });

        if (userData && userData._id) {
            let dashBody = document.getElementById('dashBody');
            if (dashBody) {
                dashBody.style.backgroundImage = 'none';
            }
        }
        
        //============================================================
        //Socket Connection Management for Live Preview
        //============================================================

        //Socket
        let socket = io();

        if (stOrd) {
            socket.emit('join', `${userData.state}'s_Room`);
        }

        socket.on('orderPlaced', (data) => {
            new Noty({
                type: 'success',
                timeout: 2000,
                text: 'New order placed.',
                progressBar: false,
            }).show();

            stOrd.unshift(data.order);

            seperatesOrds(stOrd);
            calData = {
                "total": calData.total + 1,
                "stOrd": calData.stOrd + 1,
            }
            calcDivFillFunc(calData);
            prtOrdsDivsFunc();
        })
    }
    //=======================================================================
    //=======================================================================

    let alertMsg = document.getElementById('alertMsg');
    let msg = document.getElementById('msg').value;

    if (msg == 'undefined') {
        new Noty({
            type: 'error',
            timeout: 2000,
            text: 'Please enter a valid email address and password.',
            progressBar: false,
        }).show();
    } else if (msg == 'existed') {
        new Noty({
            type: 'error',
            timeout: 2000,
            text: 'Account not found.',
            progressBar: false,
        }).show();
    } else if (msg == 'loggedIn') {
        new Noty({
            type: 'success',
            timeout: 2000,
            text: 'Logged In successfully.',
            progressBar: false,
        }).show();
    } else if (msg == 'err') {
        new Noty({
            type: 'error',
            timeout: 2000,
            text: 'Please enter appropriate information.',
            progressBar: false,
        }).show();
    } else if (msg == 'serverErr') {
        new Noty({
            type: 'error',
            timeout: 2000,
            text: 'We are facing some issues. Please try again later.',
            progressBar: false,
        }).show();
    }
</script>